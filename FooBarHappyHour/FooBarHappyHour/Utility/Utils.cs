using System;

namespace FooBarHappyHour.Utility
{
    [Serializable]
    public class Utils
    {
        private readonly float playerCastleWalk = 50f;
        private readonly float worldTransitionTime = 2f;
        private readonly float hudPaddingSmall = 16;
        private readonly float hudPaddingLarge = 32;
        private readonly double hurryTime = 100;
        private readonly double cheatCodeTimeOut = 10;
        private readonly double extraTime = 100;
        private readonly double maxTimeCap = 999;
        private readonly int cheatCodeLength = 5;
        private readonly float menuPaddingSmall = 12;
        private readonly float menuPaddingMedium = 36;
        private readonly float menuPaddingLarge = 60;
        private readonly float playerFriction = 0.8f;
        private readonly float scoreHeight = 100;
        private readonly float teleportSpeed = 0.05f;
        private readonly double transitionTime = 1d;
        private readonly float coinsToLives = 100f;
        private readonly float floatzero = 0f;
        private readonly float itemframerate = 0.05f;
        private readonly float flagframerate = 0.1f;
        private readonly float persistenttime = 0.1f;
        private readonly float transitionframetime = 0.1f;
        private readonly float explosiontime = 0.15f;
        private readonly float frametime = 0.2f;
        private readonly float menucooldowntime = 0.25f;
        private readonly float blockbumpdelay = 0.3f;
        private readonly float half = 0.5f;
        private readonly float playercooldowntime = 0.5f;
        private readonly float enemyselectcooldowntime = 0.2f;
        private readonly float dumpingforce = 0.8f;
        private readonly float playerflagrelativelocationhigh = 0.77f;
        private readonly float playerflagrelativelocationmid = 0.55f;
        private readonly float playerflagrelativelocationlow = 0.49f;
        private readonly float playerflagrelativelocation = 0.41f;
        private readonly float elapsedtimelimit = 1f;
        private readonly float enemytimetodisappear = 1f;
        private readonly float playerjumptime = 1f;
        private readonly float playertransitiontime = 1f;
        private readonly float idleduration = 1.5f;
        private readonly float pausetime = 2f;
        private readonly float enemytimetorevive = 3f;
        private readonly float introtime = 5f;
        private readonly float invincibletime = 10f;
        private readonly float enemyflipheight = 20f;
        private readonly float enemywalkspeed = 16f;
        private readonly float itemcomingoutofblockvelocity = 25f;
        private readonly float positionoffset = 30f;
        private readonly float itemmovingvelocity = 45f;
        private readonly float invincibilityTime = 4f;
        private readonly float deathTime = 5f;
        private readonly float blockbumpeddistance = 75f;
        private readonly float playermaxwalkspeed = 100f;
        private readonly float blockexplodeddistance = 128f;
        private readonly float playerflyvelocity = 128f;
        private readonly float koopakickedspeed = 150f;
        private readonly float fireballbounceheight = 150f;
        private readonly float playermaxrunspeed = 200f;
        private readonly float starjumpvelocity = 200f;
        private readonly float playerwalkacceleration = 200f;
        private readonly float removalposition = 240f;
        private readonly float fireballmovespeed = 250f;
        private readonly float playerjumpvelocity = 250f;
        private readonly float coinmovingupspeed = 250f;
        private readonly float playerdeathbouncevelocity = 300f;
        private readonly float playerbouncevelocity = 320f;
        private readonly float terminalvelocity = 400f;
        private readonly float playerclimbdownflagvelocity = 200f;
        private readonly float playerrrunacceleration = 400f;
        private readonly float gravityconstant = 500f;
        private readonly float cheatcodecooldown = 1f;
        private readonly float enemyspawninterval = 5f;
        private readonly float koopaspawnrate = 0.25f;
        private readonly int brokenblockshift = 4;
        private readonly int selectorgap = 6;
        private readonly float introtextoffset = 32f;
        private readonly int flagpoleframes = 5;
        private readonly int blockDetectionRange = 5;
        private readonly int initialPlayerLives = 3;
        private readonly int startingWorldID = 1;
        private readonly int menugap = 9;
        private readonly int menulabelgap0 = 12;
        private readonly int commonobjectsize = 16;
        private readonly int introhudlabelgap = 32;
        private readonly int menulabelgap1 = 36;
        private readonly int menulabelgap2 = 60;
        private readonly int hudScreenWidthMultiplier = 6;
        private readonly int coinHUDoffset = 3;
        private readonly int worldHUDoffset = 5;
        private readonly int timeHUDoffset = 7;
        private readonly int scoreHUDlength = 6;
        private readonly int coinsHUDlength = 2;
        private readonly int enemydamagescore = 100;
        private readonly int powerupitemsscore = 1000;
        private readonly int fullflagpolescore = 5000;
        private readonly int highflagpolescore = 2000;
        private readonly int midflagpolescore = 800;
        private readonly int lowflagpolescore = 400;
        private readonly int defaultflagpolescore = 100;
        private readonly int winscoreincrement = 50;
        private readonly int coinscore = 200;
        private readonly int brokenblockscore = 50;
        private readonly int mariostarheight = 208;
        private readonly int castledoorrelaivelocationx = 16;
        private readonly int castledoorrelaivelocationy = 24;
        private readonly int viewheight = 256;
        private readonly int initialtimeleft = 400;
        private readonly int extrascore = 1000;
        private readonly int scorecap = 999000;
        private readonly string bigpipe = "BigPipe";
        private readonly string smallpipe = "SmallPipe";
        private readonly string mediumpipe = "MediumPipe";
        private readonly string smallPipeSpriteDirectory = "BlockSprites/SmallPipe";
        private readonly string mediumPipeSpriteDirectory = "BlockSprites/MediumPipe";
        private readonly string bigPipeSpriteDirectory = "BlockSprites/BigPipe";
        private readonly string brickBlockSpriteDirectory = "BlockSprites/Brick";
        private readonly string brokenBlockSpriteDirectory = "BlockSprites/BrokenBlock";
        private readonly string questionBlockSpriteDirectory = "BlockSprites/QuestionAnimated";
        private readonly string hiddenBlockSpriteDirectory = "BlockSprites/Hidden";
        private readonly string usedBlockSpriteDirectory = "BlockSprites/Used";
        private readonly string groundBlockSpriteDirectory = "BlockSprites/Ground";
        private readonly string beveledSpriteDirectory = "BlockSprites/Beveled";
        private readonly string invalidside = "Invalid collision side provided";
        private readonly string gameover = "GAME OVER";
        private readonly string world = "WORLD ";
        private readonly string dash = "-";
        private readonly string livesx = " x ";
        private readonly string coinsx = "x";
        private readonly string oneplayer = "SINGLE PLAYER";
        private readonly string twoplayer = "PLAYER VS PLAYER";
        private readonly string exit = "EXIT";
        private readonly string mario = "MARIO";
        private readonly string time = "TIME";
        private readonly string paused = "PAUSED";
        private readonly string initialscoresstring = "000000";
        private readonly string initialcoinsstring = "x00";
        private readonly string playermario = "Mario";
        private readonly string playerdown = "Down";
        private readonly string playerbig = "Big";
        private readonly string playersmall = "Small";
        private readonly string playeralive = "Alive";
        private readonly string playerdead = "Dead";
        private readonly string playeridle = "Idle";
        private readonly string playerup = "Up";
        private readonly string playerrun = "Run";
        private readonly string playerfire = "Fire";
        private readonly string playernormal = "Normal";
        private readonly string playersuper = "Super";
        private readonly string playerinvincible = "Invincible";
        private readonly string bigcheatcode = "BEBIG";
        private readonly string firecheatcode = "FIERY";
        private readonly string livecheatcode = "XLIFE";
        private readonly string starcheatcode = "INVIN";
        private readonly string timecheatcode = "XTIME";
        private readonly string scorecheatcode = "SCORE";
        private readonly string clearenemycheatcode = "CLEAR";
        private readonly string resetcode = "RESET";
        public float WorldTransitionTime { get => worldTransitionTime; }
        public double HurryTime { get => hurryTime; }
        public double CheatCodeTimeOut { get => cheatCodeTimeOut; }
        public double ExtraTime { get => extraTime; }
        public double MaxTimeCap { get => maxTimeCap; }
        public int CheatCodeLength { get => cheatCodeLength; }
        public float HudPaddingSmall { get => hudPaddingSmall; }
        public float HudPaddingLarge { get => hudPaddingLarge; }
        public float MenuPaddingSmall { get => menuPaddingSmall; }
        public float MenuPaddingMedium { get => menuPaddingMedium; }
        public float MenuPaddingLarge { get => menuPaddingLarge; }
        public float PlayerCastleWalk { get => playerCastleWalk; }
        public float PlayerFriction { get => playerFriction; }
        public float ScoreHeight { get => scoreHeight; }
        public float TeleportSpeed { get => teleportSpeed; }
        public double TransitionTime { get => transitionTime; }
        public float CoinsToLives { get => coinsToLives; }
        public float FloatZero { get => floatzero; }
        public float ItemFrameRate { get => itemframerate; }
        public float FlagFrameRate { get => flagframerate; }
        public float PersistentTime { get => persistenttime; }
        public float TransitionFrameTime { get => transitionframetime; }
        public float ExplosionTime { get => explosiontime; }
        public float FrameTime { get => frametime; }
        public float MenuCoolDownTime { get => menucooldowntime; }
        public float BlockBumpDelay { get => blockbumpdelay; }
        public float Half { get => half; }
        public float PlayerCoolDownTime { get => playercooldowntime; }
        public float DumpingForce { get => dumpingforce; }
        public float playerFlagRelativeLocationHigh { get => playerflagrelativelocationhigh; }
        public float playerFlagRelativeLocationMid { get => playerflagrelativelocationmid; }
        public float playerFlagRelativeLocationLow { get => playerflagrelativelocationlow; }
        public float playerFlagRelativeLocation { get => playerflagrelativelocation; }
        public float ElapsedTimeLimit { get => elapsedtimelimit; }
        public float EnemyTimeToDisappear { get => enemytimetodisappear; }
        public float PlayerJumpTime { get => playerjumptime; }
        public float PlayerTransitionTime { get => playertransitiontime; }
        public float IdleDuration { get => idleduration; }
        public float PauseTime { get => pausetime; }
        public float EnemyTimeToRevive { get => enemytimetorevive; }
        public float IntroTime { get => introtime; }
        public float InvincibleTime { get => invincibletime; }
        public float EnemyFlipHeight { get => enemyflipheight; }
        public float EnemyWalkSpeed { get => enemywalkspeed; }
        public float ItemComingOutOfBlockVelocity { get => itemcomingoutofblockvelocity; }
        public float PositionOffset { get => positionoffset; }
        public float ItemMovingVelocity { get => itemmovingvelocity; }
        public float BlockBumpedDistance { get => blockbumpeddistance; }
        public float PlayerMaxWalkSpeed { get => playermaxwalkspeed; }
        public float BlockExplodedDistance { get => blockexplodeddistance; }
        public float PlayerFlyVelocity { get => playerflyvelocity; }
        public float KoopaKickedSpeed { get => koopakickedspeed; }
        public float FireballBounceHeight { get => fireballbounceheight; }
        public float PlayerMaxRunSpeed { get => playermaxrunspeed; }
        public float StarJumpVelocity { get => starjumpvelocity; }
        public float PlayerWalkAcceleration { get => playerwalkacceleration; }
        public float RemovalPosition { get => removalposition; }
        public float FireballMoveSpeed { get => fireballmovespeed; }
        public float PlayerJumpVelocity { get => playerjumpvelocity; }
        public float CoinMovingUpSpeed { get => coinmovingupspeed; }
        public float PlayerDeathBounceVelocity { get => playerdeathbouncevelocity; }
        public float PlayerBounceVelocity { get => playerbouncevelocity; }
        public float TerminalVelocity { get => terminalvelocity; }
        public float PlayerClimbDownFlagVelocity { get => playerclimbdownflagvelocity; }
        public float PlayerrRunAcceleration { get => playerrrunacceleration; }
        public float GravityConstant { get => gravityconstant; }
        public float CheatCodeCooldown { get => cheatcodecooldown; }
        public float EnemySpawnInterval { get => enemyspawninterval; }
        public float KoopaSpawnRate { get => koopaspawnrate;  }
        public float EnemySelectCooldown { get => enemyselectcooldowntime; }
        public float IntroTextOffset { get => introtextoffset; }
        public float InvincibilityTime { get => invincibilityTime; }
        public float DeathTime { get => deathTime; }
        public int BrokenBlockShift  { get => brokenblockshift; }
        public int SelectorGap { get => selectorgap; }
        public int FlagPoleFrames { get => flagpoleframes; }
        public int MenuGap { get => menugap; }
        public int BlockDetectionRange { get => blockDetectionRange; }
        public int MenuLabelGap0 { get => menulabelgap0; }
        public int CommonObjectSize { get => commonobjectsize; }
        public int IntroHUDLabelGap { get => introhudlabelgap; }
        public int MenuLabelGap1 { get => menulabelgap1; }
        public int MenuLabelGap2 { get => menulabelgap2; }
        public int HUDScreenWidthMultiplier { get => hudScreenWidthMultiplier; }
        public int CoinHUDOffset { get => coinHUDoffset; }
        public int WorldHUDOffset { get => worldHUDoffset; }
        public int TimeHUDOffset { get => timeHUDoffset; }
        public int CoinsHUDLength { get => coinsHUDlength; }
        public int ScoreHUDLength { get => scoreHUDlength; }
        public int EnemyDamageScore { get => enemydamagescore; }
        public int PowerUpItemsScore { get => powerupitemsscore; }
        public int FullFlagpoleScore { get => fullflagpolescore; }
        public int HighFlagpoleScore { get => highflagpolescore; }
        public int MidFlagpoleScore { get => midflagpolescore; }
        public int LowFlagpoleScore { get => lowflagpolescore; }
        public int DefaultFlagpoleScore { get => defaultflagpolescore; }
        public int WinScoreIncrement { get => winscoreincrement; }
        public int CoinScore { get => coinscore; }
        public int BrokenBlockScore { get => brokenblockscore; }
        public int MarioStarHeight { get => mariostarheight; }
        public int InitialPlayerLives { get => initialPlayerLives; }
        public int StartingWorldID { get => startingWorldID; }
        public int CastleDoorRelaiveLocationX { get => castledoorrelaivelocationx; }
        public int CastleDoorRelaiveLocationY { get => castledoorrelaivelocationy; }
        public int ViewHeight { get => viewheight; }
        public int InitialTimeLeft { get => initialtimeleft; }
        public int ExtraScore { get => extrascore; }
        public int ScoreCap { get => scorecap; }
        public string BigPipe { get => bigpipe; }
        public string SmallPipe { get => smallpipe; }
        public string MediumPipe { get => mediumpipe; }
        public string SmallPipeSpriteDirectory { get => smallPipeSpriteDirectory; }
        public string MediumPipeSpriteDirectory { get => mediumPipeSpriteDirectory; }
        public string BigPipeSpriteDirectory { get => bigPipeSpriteDirectory; }
        public string BrickBlockSpriteDirectory { get => brickBlockSpriteDirectory; }
        public string BrokenBlockSpriteDirectory { get => brokenBlockSpriteDirectory; }
        public string QuestionBlockSpriteDirectory { get => questionBlockSpriteDirectory; }
        public string HiddenBlockSpriteDirectory { get => hiddenBlockSpriteDirectory; }
        public string UsedBlockSpriteDirectory { get => usedBlockSpriteDirectory; }
        public string GroundBlockSpriteDirectory { get => groundBlockSpriteDirectory; }
        public string BeveledSpriteDirectory{ get => beveledSpriteDirectory; }
        public string InvalidSide { get => invalidside; }
        public string GameOver { get => gameover; }
        public string World { get => world; }
        public string Dash { get => dash; }
        public string LivesX { get => livesx; }
        public string CoinsX { get => coinsx; }
        public string OnePlayer { get => oneplayer; }
        public string TwoPlayer { get => twoplayer; }
        public string Exit { get => exit; }
        public string Mario { get => mario; }
        public string Time { get => time; }
        public string Paused { get => paused; }
        public string InitialScoresString { get => initialscoresstring; }
        public string InitialCoinsString { get => initialcoinsstring; }
        public string PlayerMario { get => playermario; }
        public string PlayerDown { get => playerdown; }
        public string PlayerBig { get => playerbig; }
        public string PlayerSmall { get => playersmall; }
        public string PlayerAlive { get => playeralive; }
        public string PlayerDead { get => playerdead; }
        public string PlayerIdle { get => playeridle; }
        public string PlayerUp { get => playerup; }
        public string PlayerRun { get => playerrun; }
        public string PlayerFire { get => playerfire; }
        public string PlayerNormal { get => playernormal; }
        public string PlayerSuper { get => playersuper; }
        public string PlayerInvincible { get => playerinvincible; }
        public string BigCheatCode { get => bigcheatcode; }
        public string LiveCheatCode { get => livecheatcode; }
        public string StarCheatCode { get => starcheatcode; }
        public string FireCheatCode { get => firecheatcode; }
        public string TimeCheatCode { get => timecheatcode; }
        public string ScoreCheatCode { get => scorecheatcode; }
        public string ClearEnemyCheatCode { get => clearenemycheatcode; }
        public string ResetCode { get => resetcode; }

        private static Utils instance=new Utils();
        public static Utils Instance { get => instance; set { instance = value; } }
        private Utils()
        {

        }
    }
}

